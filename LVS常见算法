LVS常见调度算法
1）轮询调度   #均等的把请求发送到后端服务器
2）加权轮叫   #权重大的后端服务器请求次数多，一般是此后端服务器配置较高；调度器可以自动问询服务器的负载情况并动态调整其权值。
3）最少链接   #动态的将请求调度到建立的链接数最少的服务器上。就近原则
4）加权最少链接   #同2就近
5）基于局部性的最少链接    #针对目标IP地址的负载均衡，主要用于Cache集群系统。一对一就近。
6）带复制的基于局部性的最少链接  #同6；一对一组
7）目标地址散列    #依据请求的目标IP地址作为散列键从静态分配的散列表找出对应的服务器，若该服务器可用并未负载，将请求发送该服务器，否则返回空
8）源地址散列    #依据请求的源IP地址
9）源IP端口的Hash   #通过Hash函数将来自同一个源IP地址和端口号的请求影射到后端固定的服务器。适用于同一客户同一请求
10）随机   #适用于后端服务器配置相同或无明显差异


HAProxy常见调度算法
roundrobin ： 基本轮询
static-rr  ： 加权轮询
leastconn  ： 连接数最少的服务器优先接收请求
source     ： 源IP地址哈希/服务器权重总数 --> 分配请求
uri        ： uri地址哈希/服务器权重总数 --> 分配请求 用于http后端服务器，缓存代              理服务器
url_param  ： 请求URL的参数
hdr(name)  ： HTTP<name>被看作http请求
rdp-cookie(name)  : 为TCP请求作查询并哈希RDPcookie<name>  如过没有cookie 则用rou                    drobin代替

Nginx
轮询（默认）
weight ：加权轮询
ip_hash：按访问IP的hash分配
fair   ：按后端服务器的响应速度分配
url_hash：按访问url的hash结果分配

